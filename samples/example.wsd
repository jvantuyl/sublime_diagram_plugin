Here are some complex examples

----------------------------------------------------------

Component diagram 1

@startuml

skinparam componentStyle uml2

cloud "GoogleDocs" {
  [GDOC docs]
}

[GDOC docs] --> [DOCX docs] : Download
[DOCX docs] --> [MD parts] : DocConvert
[MD parts] --> [Drupal feed] : book-parts-to-feed
[MD parts] --> [MD eBook] : book-join
[MD parts] --> [HTML parts] : pandoc
[MD eBook] --> [HTML eBook] : pandoc
[MD eBook] --> [FB2 eBook] : calibre
[MD eBook] --> [EPUB eBook] : calibre
[MD eBook] --> [MOBI eBook] : calibre

@enduml

----------------------------------------------------------

Component diagram 2

@startuml

skinparam component {
  Style uml2
  BackgroundColor #FEFECE
}
node "Database Server" {
  database "MSSQL / ORA \n " {
    [DB] as DB
  }
}
node "Business Logic Server" {
  frame "Windows Service Host" {
    package "GUIService" {
      [GuiService] as GuiService
    }
    package "ExtService" {
      [ExtService] as ExtService
    }
  }
}
node "Update Server \n (can be hosted on \n BL Server)" {
  folder "Remote Storage" {
    [System Storage] as UpdateStorage
  }
}
node "Client Computer" {
  folder "Local Storage" {
    [System Client] as Client
  }
}
cloud "External Systems" {
  [External Systems] as ExtSystem
}

cloud "Service Locator" {
  [Service Locator] as ServiceLocator
}
cloud "OSSBSS Services" {
  [OSSBSS Services] as OSSBSS
}
cloud "Security \n (Authority \n Service)" {
  [OSSBSS Security] as Security
}
[Client]          --> [GuiService]      : WCF HTTP/TCP
[ExtSystem]       --> [ExtService]      : WCF HTTP
[GuiService]      --> [DB]              : OSSBSS.DbAccessLayer
[GuiService]      --> [UpdateStorage]   : SMB
[GuiService]      --> [Security]        : WCF
[GuiService]      --> [ServiceLocator]  : WCF
[ServiceLocator]  --> [OSSBSS]          : WCF
[ExtService]      --> [DB]              : OSSBSS.DbAccessLayer
[ExtService]      ..> [GuiService]      : inproc

@enduml

--------------------------------------------------------------------------------

State diagram

@startuml

[*]       --> proposed  : external \n request \n registered in \n host system
proposed  --> active    : request \n accepted
proposed  --> rejected  : operator \n rejected \n request
proposed  --> cancelled : request \n cancelled \n by external \n system
active    --> resolved  : new data \n assigned
active    --> proposed  : request \n reverted
active    --> cancelled : request \n cancelled \n by external \n system \n or by \n power-user, \n data \n reverted
active    --> rejected  : no tech \n capability
resolved  --> completed : assigned data \n confirmed
resolved  --> active    : in case of correction
resolved  --> cancelled : assigned data \n reverted
completed --> [*]
rejected  --> [*]
cancelled --> [*]

proposed  : New
active    : In Work
resolved  : Processed
completed : Confirmed
cancelled : Cancelled
rejected  : Rejected

@enduml